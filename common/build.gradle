archivesBaseName = "${rootProject.archivesBaseName}-${project.name}"

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    implementation "com.electronwill.night-config:core:${rootProject.nightconfig_version}"
    implementation "com.electronwill.night-config:toml:${rootProject.nightconfig_version}"

    // Pinwheel
    implementation("gg.moonflower.pinwheel:pinwheel:${rootProject.pinwheel_version}")
//    implementation("com.github.Ocelot5836:molang-compiler:master-SNAPSHOT")
    implementation("gg.moonflower:molang-compiler:${rootProject.molangcompiler_version}")
    implementation("org.joml:joml:${rootProject.joml_version}")

    modCompileOnlyApi("mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}")

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${rootProject.mixinextras_version}"))
}

processResources {
    inputs.property "mod_id", project.mod_id

    filesMatching(["architectury.common.json"]) {
        expand "mod_id": project.mod_id
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = project.archivesBaseName
            from components.java
        }
    }
}